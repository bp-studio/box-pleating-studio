<!DOCTYPE html>
<html translate="no" lang="en">

<head>
	<meta charset="UTF-8">
	<title>Box Pleating Studio</title>

	<!-- Core info -->
	<meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, width=device-width, user-scalable=no">
	<meta name="description" content="Super-complex origami design made easy!">
	<meta name="google" content="notranslate">
	<meta name="version" content="0.6.0-alpha">

	<!-- Preload; also works locally since Chrome 102 -->
	<link rel="preload" as="font" type="font/woff2" href="assets/bps/fonts/bps.woff2">
	<link rel="preload" as="font" type="font/woff2" href="lib/font-awesome/webfonts/fa-regular-400.woff2">
	<link rel="preload" as="script" href="log/log.js">
	<link rel="preload" as="script" href="locale.js">
	<link rel="preload" as="script" href="lib/vue.runtime.global.prod.js">
	<link rel="preload" as="script" href="lib/vue-i18n.global.prod.js">
	<link rel="preload" as="script" href="main.js">
	<link rel="preload" as="script" href="client.js">

	<!-- Not implemented in Chrome yet, but are supported in Firefox and Opera -->
	<link rel="preload" as="manifest" href="manifest.json">
	<link rel="preload" as="worker" href="core.js">

	<!-- Global site tag (gtag.js) - Google Analytics -->
	<script async src="https://www.googletagmanager.com/gtag/js?id=G-GG1TEZGBCQ"></script>
	<script>
		// This part is kept in debug because app_config is also used elsewhere
		window.dataLayer = window.dataLayer || [];
		function gtag() { dataLayer.push(arguments); }
		var app_config = {
			page_title: document.title,
			page_path: "/",
			app_name: document.title,
			app_version: "1396"
		};
		gtag('js', new Date());
		gtag('config', 'G-GG1TEZGBCQ', app_config);
	</script>

	<!-- SEO -->
	<meta property="og:url" content="https://bpstudio.abstreamace.com">
	<meta property="og:type" content="website">
	<meta property="og:title" content="Box Pleating Studio">
	<meta property="og:image" content="https://bpstudio.abstreamace.com/assets/mockup.jpg">
	<meta property="og:description" content="Super-complex origami design made easy!">

	<!-- PWA setup -->
	<link rel="canonical" href="https://bpstudio.abstreamace.com" />
	<link rel="manifest" href="manifest.json">
	<link rel="icon" type="image/png" sizes="512x512" href="assets/icon/icon-512.png">
	<link rel="icon" type="image/png" sizes="192x192" href="assets/icon/icon-192.png">
	<link rel="icon" type="image/png" sizes="96x96" href="assets/icon/icon-96.png">
	<link rel="icon" type="image/png" sizes="32x32" href="assets/icon/icon-32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="assets/icon/icon-16.png">
	<link rel='apple-touch-icon' sizes='192x192' href="assets/icon/icon-192.png">
	<meta name="theme-color" content="#007bff">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-title" content="Box Pleating Studio">

	<!-- iOS Splash -->
	<link href="assets/splash/iphone5_splash.png"
		  media="(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/iphone6_splash.png"
		  media="(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/iphoneplus_splash.png"
		  media="(device-width: 621px) and (device-height: 1104px) and (-webkit-device-pixel-ratio: 3)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/iphonex_splash.png"
		  media="(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/iphonexr_splash.png"
		  media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/iphonexsmax_splash.png"
		  media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/ipad_splash.png"
		  media="(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/ipadpro1_splash.png"
		  media="(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/ipadpro3_splash.png"
		  media="(device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />
	<link href="assets/splash/ipadpro2_splash.png"
		  media="(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2)"
		  rel="apple-touch-startup-image" />

	<!-- Written in ES3 for maximal compatibility, so `var` instead of `let`, etc. -->
	<script>
		// Register service worker
		if(location.protocol == 'https:' && 'serviceWorker' in navigator) {
			navigator.serviceWorker.register('sw.js');
		}

		/** Launching Error Manager */
		var errMgr = new (function() {
			var self = this;
			var resourceErrorHandler = function(e) {
				if(e.filename) {
					setRunErr(e.filename + ": " + e.message);
				} else if(document.head.contains(e.target) && !resErr) {
					setResErr(e.target.src || e.target.href);
				}
			};
			var display = function(id, v, c) {
				var el = document.getElementById(id);
				if(!el) return;
				el.style.display = v ? 'block' : 'none';
				if(c) el.innerHTML += c;
			};

			/** Resource Error */
			var resErr = null;

			/** Runtime Error */
			var runErr = null;

			/** Whether error has already been shown */
			var errShown = false;

			function setRunErr(error) {
				if(!runErr) {
					runErr = error;
					setTimeout(self.callback, 0);
				}
			}

			function setResErr(error) {
				if(!resErr) {
					resErr = error;
					setTimeout(self.callback, 0);
				}
			}

			self.setRunErr = setRunErr;
			self.setResErr = setResErr;

			/** Finish listening to global errors */
			self.end = function() {
				window.removeEventListener('error', resourceErrorHandler, true);
			}

			/** Whether the launching fine so far. */
			self.ok = function() {
				return !resErr && !runErr;
			}

			/** GA parameter has a 100-character limit, so we split the message into chunks. */
			function splitString(str) {
				var chunks = [];
				while(str.length > 0) {
					chunks.push(str.substring(0, 100));
					str = str.substring(100);
				}
				return chunks;
			}

			/**
			 * Final processing.
			 *
			 * @return Whether the app has launched successfully.
			 */
			self.callback = function() {
				if(self.ok()) return true;
				if(errShown) return false;
				errShown = true;

				display('divWorkspace');
				display('app');
				display(
					resErr ? 'resource' : 'requirement',
					true,
					resErr ? resErr : "<br>Build number: " + app_config.app_version +
						"<br>" + navigator.userAgent +
						"<br>" + runErr
				);

				if(runErr &&
					// Filter clawers; no need to report related errors.
					!(runErr.indexOf("Illegal invocation") >= 0 && location.search.indexOf("fbclid") >= 0) &&
					!(/bot|crawl|spider/i.test(navigator.userAgent))
				) {
					var chunks = splitString(runErr);
					var data = {
						app_version: app_config.app_version,
						user_agent: navigator.userAgent,
						error: chunks[0]
					};
					for(var i = 1; i < chunks.length && i <= 10; i++) { // 1000 should be enough
						data["error" + i] = chunks[i];
					}
					gtag('event', 'unsupported', data);
				}
				return false;
			};

			// Some in-app browsers might attempt to call the following functions,
			// and we shall ignore such errors.
			var ignoreError = [
				"WeixinJSBridge",
				"_WXJS",
				"__firefox__",
				"$UCBrowser",
				"_WebViewJavascriptBridge",
				"hackLocationSuccess"
			];

			/**
			 * Global error handler;
			 * handles syntax error and all uncaught sync errors.
			 *
			 * `window.onerror` is a special event handler that it takes 5 arguments. See:
			 * https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event
			 *
			 * Note that IE 8 does not support this event, so fallback is needed.
			 */
			window.onerror = function(msg, source, line, column, error) {
				if(!source && !line && !column) return; // error is caused by injection; ignore.
				for(var i = 0; i < ignoreError.length; i++) {
					if(msg.match(ignoreError[i])) return;
				}
				setRunErr([
					msg.replace(/^.+: (.+)$/, "$1"),							// error message
					source.replace(/\?.+$/, "").replace(/^.+(\/.*?)$/, "$1"),	// path
					line,														// line number
					column,														// column number
					stack(error)												// stack trace
				].toString());
			};
			window.onunhandledrejection = function(e) {
				e = e.reason || "Unknown error";
				setRunErr(stack(e));
			}

			function stack(e) {
				if(!e) return "";
				return typeof e.stack == "string" ? e.stack.replace(/^.+? at/, "") : e.toString();
			}

			// Switch to dark theme immediately if necessary to avoid white flash
			var theme = 'system', dark = false;
			try {
				// eslint-disable-next-line compat/compat
				theme = JSON.parse(localStorage.getItem('settings')).theme;
				dark = matchMedia('(prefers-color-scheme: dark)').matches;
			} catch(e) { }
			if(theme == 'dark' || theme == 'system' && dark) {
				document.documentElement.classList.add('dark');
			}

			// Legacy browser fallback
			if(!window.addEventListener || typeof Promise == 'undefined' || typeof TextDecoder == 'undefined') {
				runErr = 'Legacy browser';
				window.onload = self.callback; // This covers the case for IE < 9 as well.
			} else {
				// Capture <script> or <link> loading error
				window.addEventListener('error', resourceErrorHandler, true);
			}
		})();

		// Top level objects
		var i18n, bp;
	</script>

	<!-- Critical -->
	<link rel="stylesheet" href="lib/bootstrap/bootstrap.min.css">
	<link rel="stylesheet" href="assets/bps/style.css">
	<link rel="stylesheet" href="main.css">

	<!-- eslint-disable -->
	<!-- Launcher -->
	<script>
		// Top level objects
		const __worker_src = 'core.js';
		const bpLibs = ['client.js'];
		let __worker = new Worker(__worker_src);

		function loadScript(src) {
			let script = document.createElement('script');
			script.src = src;
			script.async = false;
			document.head.appendChild(script);
		}
		window.addEventListener("DOMContentLoaded",
			() => setTimeout(	// Use a delay to create a breakpoint, so that FCP may occur earlier.
				() => {
					const scripts = [
						'log/log.js',
						'locale.js',
						'lib/vue.runtime.global.prod.js',
						'lib/vue-i18n.global.prod.js',
						'main.js'
					];
					scripts.forEach(loadScript);
				}, 1
			),
			{ once: true }
		);
	</script>
</head>

<body>
	<!-- Error message -->
	<div class="viewport p-3 scroll-shadow" style="z-index: 0; padding: 20px;">
		<div id="requirement" style="display:none;">
			<h3>An error occurred during the startup of Box Pleating Studio.</h3>
			<div class="mt-2">
				Possible causes include:
				<ol>
					<li>
						Outdated browser or operating system<br>
						Minimal requirement for BP Studio is Chrome &ge; 66, Edge &ge; 79, Firefox &ge; 78, Opera &ge; 53,
						Safari &ge; 11, or Samsung Internet &ge; 9.<br>
						Other browsers (especially those that are Chromium-based) might also work,
						but are not officially supported and there's no guarantee that all functionality will operate.<br>
						If you haven't done so, please upgrade your browser (note that upgrading Safari requires upgrading the system)
						or use the latest version of Chrome, which is the recommended browser.<br>
						It is also known that earlier versions of Windows 7 may cause issues with SSL certificates.
						Please try updating Windows if the website is marked "insecure".
					</li>
					<li>
						Temporary bug<br>
						Please try clearing browser cache data and reloading the app to update BP Studio to the latest version,
						which might have fixed the bug, especially on Safari,
						in which a known bug in its caching mechanism could lead to you seeing this error.
					</li>
				</ol>
				In all cases, the error has been reported to the author,
				and he will try his best to fix the issue when applicable.<br>
				If none of the above solved the problem,
				please come back later in a few days and see if the error has been solved.
				The author apologize for the inconvenience.<br>
				You could also submit an issue on
				<a href="https://github.com/MuTsunTsai/box-pleating-studio/issues" target="_blank" rel="noopener">GitHub</a>
				or through <a href="https://discord.gg/zS4FPxHwHX" target="_blank" rel="noopener">Discord</a>
				to report this issue; please include the following diagnosis information in your submission.
			</div>
		</div>
		<div id="resource" style="display:none;">
			<h3>Some of the required resources cannot be loaded successfully.</h3>
			<div class="mt-2">
				As a result, Box Pleating Studio cannot be started.<br>
				This is probably due to internet connection problem and/or missing cached resources.
				Please check you network and try again.<br><br>
				Resource failed to load:
			</div>
		</div>
		<noscript>
			<h3>Box Pleating Studio requires JavaScript enabled in your browser.</h3>
		</noscript>
	</div>

	<!-- Actual app -->
	<div id="divWorkspace"></div>
	<div id="app">__VUE_SSG__</div>

</body>

</html>
